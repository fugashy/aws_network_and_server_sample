vpc:
  - Name: 'vpc_region'
    CidrBlock: '10.0.0.0/16'
    EnableDnsHostnames: true

subnet:
  - Name: 'public_subnet'
    CidrBlock: '10.0.1.0/24'
    AvailabilityZone: 'ap-northeast-1a'
    vpc_name: 'vpc_region'

  - Name: 'private_subnet'
    CidrBlock: '10.0.2.0/24'
    AvailabilityZone: 'ap-northeast-1a'
    vpc_name: 'vpc_region'

internet_gateway:
  - Name: 'gateway'
    vpc_name: 'vpc_region'

route_table:
  - Name: 'public_rt'
    vpc_name: 'vpc_region'
    subnet_name: 'public_subnet'
    routes:
      - GatewayId: 'gateway'
        DestinationCidrBlock: '0.0.0.0/0'

security_group:
  - GroupName: 'web_server_sg'
    Description: 'A security group for public VPC'
    IpPermissions:
      # for ssh
      - IpProtocol: 'tcp'
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
      # for web server
      - type: 'http'
        IpProtocol: 'tcp'
        FromPort: 80
        ToPort: 80
        CidrIp: '0.0.0.0/0'
      - type: 'costomized tcp'
        IpProtocol: 'tcp'
        FromPort: 8080
        ToPort: 8080
        CidrIp: '0.0.0.0/0'
      # for ping
      - IpProtocol: 'icmp'
        FromPort: -1
        ToPort: -1
        CidrIp: '0.0.0.0/0'
        CidrIpv6: '::/0'
    vpc_name: 'vpc_region'
  - GroupName: 'db_sg'
    Description: 'A security group for private VPC'
    IpPermissions:
      - IpProtocol: 'tcp'
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
      # for DB
      - IpProtocol: 'tcp'
        FromPort: 3306
        ToPort: 3306
        CidrIp: '0.0.0.0/0'
        CidrIpv6: '::/0'
      # for ping
      - IpProtocol: 'icmp'
        FromPort: -1
        ToPort: -1
        CidrIp: '0.0.0.0/0'
        CidrIpv6: '::/0'
    vpc_name: 'vpc_region'

key:
  - name: 'web_server_ec2_key'
    save_dir_path: '/tmp'

elastic_compute_cloud:
  # general
# - ImageId: 'ami-08847abae18baa040'
  # ecs optimzied
  - ImageId: 'ami-064bf9846657106e1'
    MinCount: 1
    MaxCount: 1
    InstanceType: 't2.micro'
    Name: 'web_server_ec2'
    SubnetId: 'public_subnet'
    Groups: 'web_server_sg'
    KeyName: 'web_server_ec2_key'
    NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        DeviceIndex: 0
    # To be ECS component
    # Need AmazonEC2ContainerServiceforEC2Role for user, and creating ecsInstanceRole for EC2
    IamInstanceProfile:
      Name: 'ecsInstanceRole'
    UserData: '#!/bin/bash \n echo ECS_CLUSTER=" + sample_cluster + " >> /etc/ecs/ecs.config'

elastic_container_service:
  create_cluster:
    clusterName: 'sample_cluster'
  task:
    family: 'network_and_server_sample'
    networkMode: 'bridge'
    containerDefinitions:
      - name: 'web_server'
        image: 'fugashy/aws_web_server_sample'
        cpu: 1
        memory: 300
        portMappings:
          - containerPort: 80
            hostPort: 80
            protocol: 'tcp'
        essential: true
